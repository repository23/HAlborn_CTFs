// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import {Script} from "forge-std/Script.sol";
import {ERC1967Proxy} from "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol";
import {HalbornToken} from "../src/HalbornToken_flattened.sol";
import {HalbornTokenV2} from "../src/HalbornToken_flattened_v2.sol";

contract DeployToken is Script {
    function run() external returns (address) {
        address proxy = deployToken();
        return proxy;
    }

    function deployToken() public returns (address) {
        vm.startBroadcast();
        HalbornToken Token= new HalbornToken();
        ERC1967Proxy proxy = new ERC1967Proxy(address(Token), "");
        HalbornToken(address(proxy)).initialize();
        vm.stopBroadcast();
        return address(proxy);
    }

        function deployTokenNoProxy() public returns (address) {
        vm.startBroadcast();
        HalbornToken Token= new HalbornToken();

        vm.stopBroadcast();
        return address(Token);
    }

}
