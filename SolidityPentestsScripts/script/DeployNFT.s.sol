// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import {Script} from "forge-std/Script.sol";
import {ERC1967Proxy} from "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol";
import {HalbornNFT} from "../src/HalbornNFT_flattened.sol";
import {HalbornTokenV2} from "../src/HalbornToken_flattened_v2.sol";

contract DeployNFTToken is Script {
    function run() external returns (address) {
        address proxy = deployNFTToken();
        return proxy;
    }

    function deployNFTToken() public returns (address) {
        vm.startBroadcast();
        HalbornNFT NFTToken= new HalbornNFT();
        ERC1967Proxy proxy = new ERC1967Proxy(address(NFTToken), "");
        HalbornNFT(address(proxy)).initialize(0x9d997719c0a5b5f6db9b8ac69a988be57cf324cb9fffd51dc2c37544bb520d65,1000); // merkle root , price of NFT colateral
        vm.stopBroadcast();
        return address(proxy);
    }

     function deployNFTTokenNoProxy() public returns (address) {
        vm.startBroadcast();
        HalbornNFT NFTToken= new HalbornNFT();

        vm.stopBroadcast();
        return address(NFTToken);
    }

}


/*
merkle trees examples

["0x5B38Da6a701c568545dCfcB03FcB875f56beddC4",
"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"]

"0": "bytes32: 0x9d997719c0a5b5f6db9b8ac69a988be57cf324cb9fffd51dc2c37544bb520d65",
	"1": "bytes32[][]: 
	0x999bf57501565dbd2fdcea36efa2b9aef8340a8901e3459f4a4c926275d36cdb,
	0x999bf57501565dbd2fdcea36efa2b9aef8340a8901e3459f4a4c926275d36cdb"
	
	
["0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB",
"0x617F2E2fD72FD9D5503197092aC168c91465E7f2"]

	{
	"0": "bytes32: 0xda2a605bdf59a3b18e24cd0b2d9110b6ffa2340f6f67bc48214ac70e49d12770",
	"1": "bytes32[][]:
	0xf6d82c545c22b72034803633d3dda2b28e89fb704f3c111355ac43e10612aedc,
	0xf6d82c545c22b72034803633d3dda2b28e89fb704f3c111355ac43e10612aedc"
	
    */
